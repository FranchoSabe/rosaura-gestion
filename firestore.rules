rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función simple para verificar autenticación
    function isAuth() {
      return request.auth != null;
    }
    
    // Función para verificar si es staff (admin o mozo)
    function isStaff() {
      return isAuth() && 
        (request.auth.token.email in ['admin@rosaura.com', 'mozo@rosaura.com']);
    }

    // Función para verificar si el usuario es "dueño" de la reserva (no autenticado)
    function isOwner() {
      // 1. La data de la actualización debe contener el ID de la reserva.
      let hasId = 'reservationId' in request.resource.data;
      // 2. El ID de la reserva en la data debe coincidir con el que ya existe en el documento.
      let idMatches = request.resource.data.reservationId == resource.data.reservationId;
      // 3. Solo se permite modificar un conjunto específico de campos.
      //    Esto previene que se modifique el ID de la reserva u otros campos sensibles.
      let allowedUpdate = request.resource.data.diff(resource.data).affectedKeys()
           .hasOnly(['fecha', 'horario', 'personas', 'cliente', 'updatedAt', 'turno']);
      
      return hasId && idMatches && allowedUpdate;
    }

    // Reglas para reservas
    match /reservas/{reservaId} {
      // Permitir lectura pública de reservas
      allow read: if true;
      
      // Cualquiera puede crear una reserva
      allow create: if true;
      
      // Staff puede modificar o eliminar cualquier reserva
      // Clientes pueden modificar su propia reserva usando el reservationId
      allow update: if isStaff() || isOwner();
      
      // Solo staff puede eliminar
      allow delete: if isStaff();
    }

    // Reglas para clientes
    match /clientes/{clienteId} {
      // Permitir lectura pública de clientes
      allow read: if true;
      // Cualquiera puede registrarse
      allow create: if true;
      // Solo staff puede modificar
      allow update, delete: if isStaff();
    }

    // Reglas para lista de espera
    match /lista_espera/{waitingId} {
      // Cualquiera puede crear una reserva en lista de espera
      allow create: if true;
      
      // Permitir lectura pública temporalmente para debugging
      // TODO: Cambiar a isStaff() una vez resuelto el problema de auth
      allow read: if true;
      
      // Solo staff puede modificar o eliminar de la lista de espera
      allow update, delete: if isStaff();
    }

    // Reglas para proveedores
    match /proveedores/{providerId} {
      // Permitir lectura pública temporalmente para debugging
      // TODO: Cambiar a isStaff() una vez resuelto el problema de auth
      allow read: if true;
      
      // Solo staff puede modificar proveedores
      allow write: if isStaff();
    }

    // Reglas para productos de proveedores
    match /productos_proveedores/{productId} {
      // Permitir lectura pública temporalmente para debugging
      // TODO: Cambiar a isStaff() una vez resuelto el problema de auth
      allow read: if true;
      
      // Solo staff puede modificar productos
      allow write: if isStaff();
    }

    // Reglas para pedidos a proveedores
    match /pedidos_proveedores/{orderId} {
      // Permitir lectura pública temporalmente para debugging
      // TODO: Cambiar a isStaff() una vez resuelto el problema de auth
      allow read: if true;
      
      // Solo staff puede modificar pedidos
      allow write: if isStaff();
    }

    // ==========================================
    // SISTEMA DE PEDIDOS - NUEVAS COLECCIONES
    // ==========================================

    // Reglas para productos del menú
    match /productos/{productId} {
      // Permitir todas las operaciones temporalmente para desarrollo
      // TODO: Cambiar a isStaff() una vez implementada la autenticación
      allow read, write: if true;
    }

    // Reglas para pedidos del restaurante
    match /pedidos/{orderId} {
      // Permitir todas las operaciones temporalmente para desarrollo
      // TODO: Cambiar a isStaff() una vez implementada la autenticación
      allow read, write: if true;
    }

    // Reglas para estado de mesas
    match /mesas/{tableId} {
      // Permitir todas las operaciones temporalmente para desarrollo
      // TODO: Cambiar a isStaff() una vez implementada la autenticación
      allow read, write: if true;
    }

    // Reglas para arqueos de caja
    match /arqueos_caja/{arqId} {
      // TEMPORAL: Permitir lectura a todos para testing
      // TODO: Cambiar a isStaff() una vez funcionando
      allow read: if true;
      
      // Escritura: Solo staff autenticado puede crear/modificar arqueos
      allow write: if isStaff();
    }
    
    // Reglas para ventas y estadísticas (colección de respaldo)
    match /ventas/{ventaId} {
      // Solo staff puede acceder a datos de ventas
      allow read, write: if isStaff();
    }
  }
} 